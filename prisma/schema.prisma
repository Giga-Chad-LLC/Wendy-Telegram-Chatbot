// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id  Int @id @default(autoincrement())
  telegramFirstName  String
  telegramLastName  String
  telegramUserId  String
  telegramChatId  Int @unique
  since DateTime @default(now())
  questionnaire Questionnaire?
  messages  ChatMessage[]
  notifications RecurringChatNotification[]
}

model Questionnaire {
  id  Int @id @default(autoincrement())
  userId  Int @unique
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  preferredName String
  bio String
  age Int?
  isAdult Boolean
  residenceCountry  String
  residenceCity String?
}

enum ChatMessageRole {
  USER
  ASSISTANT
}

model ChatMessage {
  id  Int @id @default(autoincrement())
  userId  Int @unique
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  summary String
  text  String
  role  ChatMessageRole
  sent  DateTime @default(now()) @db.Timestamptz
  lastEdited  DateTime @default(now()) @db.Timestamptz
}

model RecurringChatNotification {
  id  Int @id @default(autoincrement())
  userId  Int @unique
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  dayTimepoint  Int // TODO: should it be DateTime?
}