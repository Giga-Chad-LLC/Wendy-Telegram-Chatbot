version: '3.8'

volumes:
  postgres_data: { }

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  api:
    build: .
    container_name: api
    env_file:
      - .env
    ports:
      - '3000:3000'
    command: /bin/sh -c "npm run build && npm run api"
    tty: true
    restart: always
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./front-dist:/usr/share/nginx/html
    restart: always

  bot:
    build: .
    container_name: bot
    env_file:
      - .env
    command: /bin/sh -c "npm run build && npm run bot"
    restart: always
    tty: true
    depends_on:
      - postgres


  adminer:
    image: adminer:4.8.1
    container_name: adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - '8080:8080'
